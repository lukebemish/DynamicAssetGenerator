buildscript {
    dependencies {
        classpath 'com.google.code.gson:gson:2.10'
    }
}

plugins {
    id 'dev.lukebemish.modgitpublisher' version '1.1.2'
    id 'io.github.groovymc.modsdotgroovy' version '1.1.2'
    id 'org.quiltmc.gradle.licenser' version '1.+' apply false
}

modGitPublisher {
    projectName = "Dynamic Asset Generator"
    minecraftVersion = project.minecraft_version
}

allprojects {p->
    if (rootProject.hasProperty('versionOverride') && rootProject.versionOverride !== null)
        p.version = rootProject.versionOverride
    else
        p.version = modGitPublisher.version
}

modsDotGroovy {
    dslVersion = '1.1.3'
    platform 'multiloader'
}

subprojects { p ->
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'org.quiltmc.gradle.licenser'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    license {
        rule rootProject.file('header.txt')
        exclude '**/*.mcmeta'
    }

    jar {
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestampe'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }
    
    repositories {
        mavenCentral()

        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        maven {
            name 'Quilt (Release)'
            url 'https://maven.quiltmc.org/repository/release/'
        }

        maven {
            name = 'TheModdingInquisition'
            url = 'https://maven.moddinginquisition.org/releases'
        }
    }

    dependencies {
        implementation 'org.jetbrains:annotations:23.0.0'
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    publishing {
        repositories {
            maven {
                name = 'PersonalMaven'
                url = uri('https://maven.lukebemish.dev/releases')
                credentials {
                    username = findProperty('lukebemishMavenUser') ?: ''
                    password = findProperty('lukebemishMavenPassword') ?: ''
                }
            }
        }
    }
}

[project(':Forge'), project(':Quilt')].each { p ->
    p.afterEvaluate {
        ['build', 'publish', 'modrinth', 'curseforge'].each {
            p.tasks.named(it) {
                dependsOn 'checkLicenses'
            }
        }
    }
}

plugins {
	id 'maven-publish'
	alias libs.plugins.curseforgegradle
	alias libs.plugins.minotaur
}

apply plugin: 'org.quiltmc.loom'

base.archivesName = "${artifact_id}-fabriquilt-${libs.versions.minecraft.get()}"

repositories {
	maven {
		name 'Quilt (Snapshot)'
		url 'https://maven.quiltmc.org/repository/snapshot/'
		content {
			includeGroup 'org.quiltmc.fabric_api_qsl'
			includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
		}
	}

	maven { url 'https://maven.wispforest.io' }
}

configurations {
    testCompileClasspath.extendsFrom(compileClasspath)
}

dependencies {
	minecraft libs.minecraft
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
	}
    modCompileOnly libs.quilt.loader
    modCompileOnly libs.qfapi

    modLocalRuntime libs.quilt.loader
    modLocalRuntime libs.qfapi

	compileOnly project(":Common")

	compileOnly libs.autoservice
	annotationProcessor libs.autoservice

	// Compat
	modCompileOnly libs.owolib
}

loom {
	runs {
		client {
			client()
			setConfigName("Quilt Client")
			ideConfigGenerated(true)
			runDir("run")
			property 'dynamicassetgenerator.test', 'true'
			property 'dynamicassetgenerator.time_resources', 'true'
		}
		server {
			server()
			setConfigName("Quilt Server")
			ideConfigGenerated(true)
			runDir("run")
			property 'dynamicassetgenerator.test', 'true'
			property 'dynamicassetgenerator.time_resources', 'true'
		}
	}

	mixin {
		defaultRefmapName = "dynamic_asset_generator.refmap.json"
	}
}

processResources {
    from project(":Common").sourceSets.main.resources
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}

sourcesJar {
	from project(":Common").sourceSets.main.allSource
}

javadocJar {
	from project(":Common").sourceSets.main.allJava
}

jar {
	from("LICENSE") {
		rename { "${it}_${mod_name}"}
	}
}

tasks.jar.finalizedBy(tasks.remapJar)

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId base.archivesName.get()
        }
    }

    repositories {
    }
}

// Publishing

import net.darkhax.curseforgegradle.TaskPublishCurseForge

if (System.getenv('CURSEFORGE_KEY')) {
    tasks.register('curseforge', TaskPublishCurseForge) {
        disableVersionDetection()
        apiToken = System.getenv('CURSEFORGE_KEY')
        def projectId = '577096'
        def mainFile = upload(projectId, tasks.remapJar)
        mainFile.displayName = "Dynamic Asset Generator [Fabric/Quilt] v$project.version"
        mainFile.releaseType = "${project.release_type}"
        mainFile.addModLoader('Fabric', 'Quilt')
        mainFile.addGameVersion("${libs.versions.minecraft.get()}")
        mainFile.addRequirement("fabric-api")
        mainFile.changelog = ''
    }

    afterEvaluate {
        tasks.curseforge.dependsOn tasks.remapJar
    }
}

if (System.getenv('MODRINTH_KEY')) {
	modrinth {
		token = System.getenv('MODRINTH_KEY')
		projectId = '83pFEQVb'
		versionNumber = "$project.version"
		versionType = "${project.release_type}"
		detectLoaders = false
		uploadFile = remapJar
		gameVersions = ["${libs.versions.minecraft.get()}"]
		loaders = ['quilt','fabric']
		dependencies {
			required.project 'fabric-api'
		}
	}
}

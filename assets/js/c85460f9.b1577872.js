"use strict";(self.webpackChunkdynamic_asset_generator_wiki=self.webpackChunkdynamic_asset_generator_wiki||[]).push([[915],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,d=u["".concat(c,".").concat(m)]||u[m]||f[m]||o;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},s="Cutoff Mask Source",i={unversionedId:"json/texsources/masks/cutoff",id:"json/texsources/masks/cutoff",title:"Cutoff Mask Source",description:"Source Type IDmask/cutoff",source:"@site/docs/json/texsources/masks/cutoff.md",sourceDirName:"json/texsources/masks",slug:"/json/texsources/masks/cutoff",permalink:"/DynamicAssetGenerator/json/texsources/masks/cutoff",draft:!1,editUrl:"https://github.com/lukebemishprojects/DynamicAssetGenerator/tree/docs/docs/json/texsources/masks/cutoff.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Channel Mask Source",permalink:"/DynamicAssetGenerator/json/texsources/masks/channel"},next:{title:"Edge Mask Source",permalink:"/DynamicAssetGenerator/json/texsources/masks/edge"}},c={},l=[],p={toc:l},u="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cutoff-mask-source"},"Cutoff Mask Source"),(0,a.kt)("p",null,"Source Type ID: ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic_asset_generator:mask/cutoff")),(0,a.kt)("p",null,"Format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "dynamic_asset_generator:mask/cutoff",\n    "source": {   },\n    "cutoff": 128, // optional, defaults to 128\n    "channel": "alpha" // optional, defaults to "alpha"\n}\n')),(0,a.kt)("p",null,"Generates a mask which is solid everywhere the provided channel of the provided source is greater than the cutoff, and transparent otherwise. The ",(0,a.kt)("inlineCode",{parentName:"p"},"channel")," may be one of ",(0,a.kt)("inlineCode",{parentName:"p"},"red"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"green"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"blue"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"alpha"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cielab_lightness"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cielab_a"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"cielab_b"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"hsl_hue"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"hsl_lightness"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"hsl_saturation"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"cutoff")," must be an integer between 0 and 255, inclusive."))}f.isMDXComponent=!0}}]);
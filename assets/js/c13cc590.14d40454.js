"use strict";(self.webpackChunkdynamic_asset_generator_wiki=self.webpackChunkdynamic_asset_generator_wiki||[]).push([[571],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7243:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},i="Combined Paletted Image Source",c={unversionedId:"json/texsources/combined-paletted-image",id:"json/texsources/combined-paletted-image",title:"Combined Paletted Image Source",description:"Source Type IDcombinedpalettedimage",source:"@site/docs/json/texsources/combined-paletted-image.md",sourceDirName:"json/texsources",slug:"/json/texsources/combined-paletted-image",permalink:"/DynamicAssetGenerator/json/texsources/combined-paletted-image",draft:!1,editUrl:"https://github.com/lukebemish/DynamicAssetGenerator/tree/docs/docs/json/texsources/combined-paletted-image.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Color Source",permalink:"/DynamicAssetGenerator/json/texsources/color"},next:{title:"Crop Source",permalink:"/DynamicAssetGenerator/json/texsources/crop"}},s={},l=[],p={toc:l},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"combined-paletted-image-source"},"Combined Paletted Image Source"),(0,a.kt)("p",null,"Source Type ID: ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic_asset_generator:combined_paletted_image")),(0,a.kt)("p",null,"Format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "dynamic_asset_generator:combined_paletted_image",\n    "overlay": {   },\n    "background": {   },\n    "paletted": {   },\n    "include_background": true,\n    "stretch_paletted": false,\n    "extend_palette_size": 0\n}\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"overlay"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"paletted"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"background")," are texture sources. The Combined Paletted Image Source leverages some of the more powerful abilities of ",(0,a.kt)("em",{parentName:"p"},"Dynamic Asset Generator"),". First, a palette of colors is extracted from ",(0,a.kt)("inlineCode",{parentName:"p"},"background"),". If this palette contains fewer colors than ",(0,a.kt)("inlineCode",{parentName:"p"},"extend_palette_size"),", it is grown to the correct size by adding lighter and darker colors to the ends of the palette. The ",(0,a.kt)("inlineCode",{parentName:"p"},"paletted"),' image is then used as a sort of "map" for this palette, with the average RGB value being used to select a color from the palette. If ',(0,a.kt)("inlineCode",{parentName:"p"},"stretch_paletted"),' is true, the values of this image will be "stretched" to fill the lightest and darkest values of the palette. Then, the images are stacked; if ',(0,a.kt)("inlineCode",{parentName:"p"},"include_background")," is true, then the background goes at the back. Either way, the image colored with the palette goes in the middle and the overlay goes on top."))}m.isMDXComponent=!0}}]);
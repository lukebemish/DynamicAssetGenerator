"use strict";(self.webpackChunkdynamic_asset_generator_wiki=self.webpackChunkdynamic_asset_generator_wiki||[]).push([[30],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4709:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},s="JSON Generators",i={unversionedId:"json/category",id:"json/category",title:"JSON Generators",description:"Dynamic Asset Generator can be used to add or overwrite assets or data using JSON files. These files live in assets//dynamicassetgenerator or data//dynamicassetgenerator, and can be placed under any namespace and within subfolders. Their general format is as follows:",source:"@site/docs/json/category.md",sourceDirName:"json",slug:"/json/category",permalink:"/DynamicAssetGenerator/json/category",draft:!1,editUrl:"https://github.com/lukebemishprojects/DynamicAssetGenerator/tree/docs/docs/json/category.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dynamic Asset Generator",permalink:"/DynamicAssetGenerator/"},next:{title:"Texture Generation",permalink:"/DynamicAssetGenerator/json/texsources/category"}},c={},l=[{value:"Sprite Sources",id:"sprite-sources",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"json-generators"},"JSON Generators"),(0,a.kt)("p",null,"Dynamic Asset Generator can be used to add or overwrite assets or data using JSON files. These files live in ",(0,a.kt)("inlineCode",{parentName:"p"},"assets/<namespace>/dynamic_asset_generator")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"data/<namespace>/dynamic_asset_generator"),", and can be placed under any namespace and within subfolders. Their general format is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type" : "<type identifier>",\n    "args" : ...\n}\n')),(0,a.kt)("p",null,"Where the ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," defines what sort of generator it is and what it does; the other specified arguments will depend on the type of generator."),(0,a.kt)("h2",{id:"sprite-sources"},"Sprite Sources"),(0,a.kt)("p",null,"Dynamic Asset Generator's texture sources can also be used as a sprite source in a texture atlas, similar to vanilla's paletted\npermutations. To use them this way, a sprite source of type ",(0,a.kt)("inlineCode",{parentName:"p"},"dynamic_asset_generator:tex_sources")," should be added to the texture\natlas JSON file you wish to generate textures for. This sprite source takes several parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sources")," - a map of the resource locations of textures to generate, to the texture source to use to generate them."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"location")," - optional; a path representing a folder to search for texture sources to generate.")),(0,a.kt)("p",null,"For instance, if the following were placed at ",(0,a.kt)("inlineCode",{parentName:"p"},"assets/minecraft/atlases/blocks.json"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "type": "dynamic_asset_generator:tex_sources",\n      "sources": {\n        "minecraft:block/clay": {\n          "type" : "dynamic_asset_generator:texture",\n          "path" : "minecraft:block/iron_block"\n        }\n      },\n      "location": "namespace:path"\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"Then the texture for clay would be replaced with the texture for iron, and a file placed at ",(0,a.kt)("inlineCode",{parentName:"p"},"assets/minecraft/namespace/path/block/end_stone.json"),"\ncontaining a texture source would replace the texture for end stone. This sprite source takes the same types of texture sources\nas ",(0,a.kt)("a",{parentName:"p",href:"/DynamicAssetGenerator/json/texsources/category"},"Texture Generation"),". If the texture source accesses other textures, the sprite source will attempt\nto generate animation metadata from those textures."))}d.isMDXComponent=!0}}]);